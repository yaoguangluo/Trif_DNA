以后文件统一采用txt，不想电脑里各种上层应用
函数分类
1 元基枝
  --1.1 启动文件
  		--文件夹--package ME.VPC.M.C;
  		--文件名--YLJFrame
  --1.2 初始文件
        --文件夹--package ME.VPC.M.app;		
        --文件名--App_X
  --1.3 枝叶文件
        --文件夹--package ME.VPC.M.X;
        --文件名--AppInit_X_PageLoad
  
2 接口函数
  --2.1 养疗经功能
        --2.1.1 药食同源--西药手册-中医方剂-
        		--文件夹-- 仅保留这3个先，方便我界面功能测试。
        		--文件名--
  --2.2 服务器功能
        --2.2.1 Rest通讯 HVPCS 融合
        		--文件夹--package ME.VPC.M.X;
        		--文件名--AppInit_XCDX   
        		--RestServer 
  --2.3 界面UI
        --2.3.1 JDK UI接口
        		--文件夹--package ME.VPC.M.X;
        		--文件名--AppInit_XCDX  
        		--UIManager.put("ScrollBarUI",
				"OPE.OVQ.MSQ.OVU.PQE.platForm.UnicornScrollBarUI");      		  
3 元基花
  --3.1 24组染色体
        --3.1.1--C_L_A--
        --3.1.2--C_L_C--
        --3.1.3--C_L_D--
        --3.1.4--C_L_E--
        --3.1.5--C_L_I--
        --3.1.6--C_L_M--
        --3.1.7--C_L_O--
        --3.1.8--C_L_P--
        --3.1.9--C_L_Q--
        --3.1.10--C_L_S--
        --3.1.11--C_L_U--
        --3.1.12--C_L_V--
        --3.1.13--C_R_A--
        --3.1.14--C_R_C--
        --3.1.15--C_R_D--
        --3.1.16--C_R_E--
        --3.1.17--C_R_I--
        --3.1.18--C_R_M--
        --3.1.19--C_R_O--
        --3.1.20--C_R_P--
        --3.1.21--C_R_S--
        --3.1.22--C_R_U--
        --3.1.23--C_R_V--
        --3.1.24--X_X_X--
        
当前简单任务
1 单例函数属性内部归纳
2 系统UML分类索引描述
3 这么多问题，看来业界是把我当大佬来看待了。我就再演一次，
4 这些年，我把一个35万行源码的大型工程在10多个平台，10多个系统环境下不同的编码协议下
，变来变去7年，至今，越来越好，不但得到很多真知灼见，还锻炼的源码的融合性，这个经验
是钱买不来的东西。于是变成一些文字，不断地精华它。因为有些问题是别人一辈子都碰不上一件的问题。

我得到一个明确的答案，面对巨大复杂繁琐的工程团研发，一旦确定了有价值的目标，事情该如何做，首先
降低自己对未来的总体期盼力，提高自己对当前的小任务的执行力。面对错误应该降低错误导致的原因的
归责和批判度，而是思考这个错误是不是跟自己有关，如果没有，就要简单假设下如果有，我该如何纠正
自身的问题，纠正前是个什么样子，纠正后会成为什么样子，让自己看到因为纠正而产生的正面连锁效应
。一次又一次的自己看到，终究质变到会让别人看到。每个人精力都有限，分清主次。

5 关于最近一些分词界同行老是AI评价我最近不出席各类会议，我要说的是我在国内买保险都是灵活就业
保险，但凡有闲钱我都会去充个场费。大家看我进度条，那么多任务等着我，我真没时间。

6 关于sonar规范插件，早期因为元基编码sonar报 数十万个错误于是我当时卸载了它，但是 sonar的规范
  在函数写作上是非常重要的，因为我的写作方法很多都是基于这类规范，可以描述为弱sonar规范。
  主要体现在下面几点，切记，是我罗瑶光的写作规范，不是工业级写作规范，至于行业借鉴，可自行增减定夺。
  6.1 --首先要美观，--空行对齐，tab对齐----这个不用我来教育。
  6.2 --格式要规矩，比如word写文章用 times new roma，IDE也一样阿。有区别吗，我一直就是这样搞得。
  6.3 --函数要缩进，像一本书一页纸一样，不要有太多的空白空缺，浪费纸张，代码也一样啊。
  6.4 --工程函数片段要去重，相同的内容可以变成一个新函数，new一下即可，
  6.5 --字符集规范，避免各类乱码。
  6.6 --函数名表达要清晰，难以让人忘却最好。
  6.7 --函数整体不能过长，避免编译解释内存溢出。
  6.8 --函数中 ififif while while while 重复条件要提取子条件出来，不要出现多个重嵌套。
  6.9 --。。。比较奇怪，我每次写代码脑袋里面就闪现intel。。有病吧。
  那就再提下intel米尔教我的汇总--
      6.9.1 米尔要我变量名写长点写成句子最好，
      6.9.2 米尔说变量名写成句子要注意语法错误。
      6.9.3 米尔说不要我每天git push 几十次源码。上百文件修改。
      6.9.4 米尔说exit发音是 exszziiit，不是exzssaait。。。。
      6.9.5 米尔说我系统改配置不work 重启下就好了。
      6.9.6 米尔说我临时变量不要用temp这个词汇。       
   	  6.9.7 米尔说 宏文件不要出现 * 号。
   	  6.9.8 米尔说我家是不是当大官的。
   	  6.9.9 米尔要我买旧金山的房子只要50万美金，他说他认识开发商。
   	  6.9.10 米尔口头禅是 shit，
   	  。。。我也是服了。

7
8
9
